// Generated by RSD - Do not modify
import type { Result, VoidType } from './_result-utils.ts';
import type { Participant, ParticipantPatch } from './model/Participant.ts';
import type { InvalidDataError, NativeRSDError, NotFoundError, StaleDataError, StatusRSDError } from './Errors.ts';
import type { ParticipantNew } from './model/ParticipantNew.ts';
import type { UpdateResult } from './model/UpdateResult.ts';

export interface EventParticipantService {
	get(eventKey: string): Promise<Result<Participant, NotFoundError | StatusRSDError | NativeRSDError>>;
	list(eventKey: string): Promise<Result<Participant[], NotFoundError | StatusRSDError | NativeRSDError>>;
	create(eventKey: string, participant: ParticipantNew): Promise<Result<string, NotFoundError | InvalidDataError | StatusRSDError | NativeRSDError>>;
	update(eventKey: string, key: string, participant: ParticipantPatch): Promise<Result<UpdateResult, NotFoundError | InvalidDataError | StaleDataError | StatusRSDError | NativeRSDError>>;
	delete(eventKey: string, key: string, version?: number): Promise<Result<VoidType, NotFoundError | StaleDataError | StatusRSDError | NativeRSDError>>;
}
