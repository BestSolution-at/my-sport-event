// Generated by RSD - Do not modify
import type { Result, VoidType } from './_result-utils.ts';
import type { Cohort, CohortPatch } from './model/Cohort.ts';
import type { InvalidDataError, NativeRSDError, NotFoundError, StaleDataError, StatusRSDError } from './Errors.ts';
import type { CohortNew } from './model/CohortNew.ts';
import type { UpdateResult } from './model/UpdateResult.ts';

export interface EventCohortService {
	get(eventKey: string, key: string): Promise<Result<Cohort, NotFoundError | StatusRSDError | NativeRSDError>>;
	list(eventKey: string): Promise<Result<Cohort[], NotFoundError | StatusRSDError | NativeRSDError>>;
	create(eventKey: string, cohort: CohortNew): Promise<Result<string, NotFoundError | InvalidDataError | StatusRSDError | NativeRSDError>>;
	update(eventKey: string, key: string, cohort: CohortPatch): Promise<Result<UpdateResult, NotFoundError | InvalidDataError | StaleDataError | StatusRSDError | NativeRSDError>>;
	delete(eventKey: string, key: string, version?: number): Promise<Result<VoidType, NotFoundError | StaleDataError | StatusRSDError | NativeRSDError>>;
}
