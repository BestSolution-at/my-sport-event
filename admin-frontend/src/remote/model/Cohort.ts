// Generated by RSD - Do not modify
import {
	type GenericCohort,
	GenericCohortFromJSON,
	type GenericCohortPatch,
	GenericCohortPatchFromJSON,
	GenericCohortPatchToJSON,
	GenericCohortToJSON,
	isGenericCohort,
} from './GenericCohort.ts';
import {
	type BirthyearCohort,
	BirthyearCohortFromJSON,
	type BirthyearCohortPatch,
	BirthyearCohortPatchFromJSON,
	BirthyearCohortPatchToJSON,
	BirthyearCohortToJSON,
	isBirthyearCohort,
} from './BirthyearCohort.ts';
import { isString } from '../_type-utils.ts';

export type Cohort = GenericCohort | BirthyearCohort;
export type CohortPatch = GenericCohortPatch | BirthyearCohortPatch;

export function isCohort(value: unknown) {
	return isGenericCohort(value) || isBirthyearCohort(value);
}

export function CohortFromJSON(value: Record<string, unknown>): Cohort {
	const descriminator = value['@type'];

	if (!isString(descriminator)) {
		throw new Error('No valid descriminator found');
	}
	switch (descriminator) {
		case 'generic':
			return GenericCohortFromJSON(value);
		case 'birthyear':
			return BirthyearCohortFromJSON(value);
		default:
			throw new Error(`Unknown descriminator "${descriminator}"`);
	}
}
export function CohortToJSON(value: Cohort): Record<string, unknown> {
	const $desc = value['@type'];
	switch ($desc) {
		case 'generic':
			return GenericCohortToJSON(value);
		case 'birthyear':
			return BirthyearCohortToJSON(value);
		default:
			throw new Error(`Unknown descriminator "${$desc}";`);
	}
}

export function CohortPatchFromJSON(value: Record<string, unknown>): CohortPatch {
	const descriminator = value['@type'];
	if (!isString(descriminator)) {
		throw new Error('No valid descriminator found');
	}
	switch (descriminator) {
		case 'patch:generic':
			return GenericCohortPatchFromJSON(value);
		case 'patch:birthyear':
			return BirthyearCohortPatchFromJSON(value);
		default:
			throw new Error(`Unknown descriminator "${descriminator}";`);
	}
}

export function CohortPatchToJSON(value: CohortPatch): Record<string, unknown> {
	const $desc = value['@type'];
	switch ($desc) {
		case 'patch:generic':
			return GenericCohortPatchToJSON(value);
		case 'patch:birthyear':
			return BirthyearCohortPatchToJSON(value);
		default:
			throw new Error(`Unknown descriminator "${$desc}";`);
	}
}
