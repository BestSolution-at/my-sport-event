// Generated by RSD - Do not modify
import { type Gender, isGender } from './Gender.ts';
import { checkProp, createIsStringTypeGuard, isRecord, isString, propValue } from '../_type-utils.ts';

export type GenericCohortNew = {
	'@type': 'generic';
	readonly name: string;
	readonly gender: Gender;
};

export function isGenericCohortNew(value: unknown): value is GenericCohortNew {
	return isRecord(value) &&
		checkProp(value, '@type', createIsStringTypeGuard('generic')) &&
		checkProp(value, 'name', isString) &&
		checkProp(value, 'gender', isGender);
}

export function GenericCohortNewFromJSON($value: Record<string, unknown>): GenericCohortNew {
	const name = propValue('name', $value, isString);
	const gender = propValue('gender', $value, isGender);
	return {
		'@type': 'generic',
		name,
		gender,
	};
}

export function GenericCohortNewToJSON($value: GenericCohortNew): Record<string, unknown> {
	const name = $value.name;
	const gender = $value.gender;

	return {
		'@type': 'generic',
		name,
		gender,
	};
}

