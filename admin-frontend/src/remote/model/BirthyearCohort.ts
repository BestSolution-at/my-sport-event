// Generated by RSD - Do not modify
import {
	checkOptProp,
	checkProp,
	createIsStringTypeGuard,
	isNumber,
	isRecord,
	isString,
	propValue,
} from '../_type-utils.ts';

export type BirthyearCohort = {
	'@type': 'birthyear';
	readonly key: string;
	readonly version: number;
	readonly name: string;
	readonly min: number;
	readonly max: number;
};

export function isBirthyearCohort(value: unknown): value is BirthyearCohort {
	return (
		isRecord(value) &&
		checkProp(value, '@type', createIsStringTypeGuard('birthyear')) &&
		checkProp(value, 'key', isString) &&
		checkProp(value, 'version', isNumber) &&
		checkProp(value, 'name', isString) &&
		checkProp(value, 'min', isNumber) &&
		checkProp(value, 'max', isNumber)
	);
}

export function BirthyearCohortFromJSON($value: Record<string, unknown>): BirthyearCohort {
	const key = propValue('key', $value, isString);
	const version = propValue('version', $value, isNumber);
	const name = propValue('name', $value, isString);
	const min = propValue('min', $value, isNumber);
	const max = propValue('max', $value, isNumber);
	return {
		'@type': 'birthyear',
		key,
		version,
		name,
		min,
		max,
	};
}

export function BirthyearCohortToJSON($value: BirthyearCohort): Record<string, unknown> {
	const key = $value.key;
	const version = $value.version;
	const name = $value.name;
	const min = $value.min;
	const max = $value.max;

	return {
		'@type': 'birthyear',
		key,
		version,
		name,
		min,
		max,
	};
}

export type BirthyearCohortPatch = {
	'@type': 'birthyear-patch';
	readonly key: string;
	readonly version: number;
	readonly name?: string;
	readonly min?: number;
	readonly max?: number;
};

export function isBirthyearCohortPatch(value: unknown): value is BirthyearCohortPatch {
	return (
		isRecord(value) &&
		checkProp(value, '@type', createIsStringTypeGuard('birthyear')) &&
		checkProp(value, 'key', isString) &&
		checkProp(value, 'version', isNumber) &&
		checkOptProp(value, 'name', isString) &&
		checkOptProp(value, 'min', isNumber) &&
		checkOptProp(value, 'max', isNumber)
	);
}

export function BirthyearCohortPatchFromJSON($value: Record<string, unknown>): BirthyearCohortPatch {
	const key = propValue('key', $value, isString);
	const version = propValue('version', $value, isNumber);
	const name = propValue('name', $value, isString, 'optional');
	const min = propValue('min', $value, isNumber, 'optional');
	const max = propValue('max', $value, isNumber, 'optional');
	return {
		'@type': 'birthyear-patch',
		key,
		version,
		name,
		min,
		max,
	};
}

export function BirthyearCohortPatchToJSON($value: BirthyearCohortPatch): Record<string, unknown> {
	const key = $value.key;
	const version = $value.version;
	const name = $value.name;
	const min = $value.min;
	const max = $value.max;

	return {
		'@type': 'birthyear-patch',
		key,
		version,
		name,
		min,
		max,
	};
}
