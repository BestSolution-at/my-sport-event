// Generated by RSD - Do not modify
import { checkProp, createIsStringTypeGuard, isNumber, isRecord, isString, propValue } from '../_type-utils.ts';

export type BirthyearCohortNew = {
	'@type': 'birthyear',
	readonly name: string;
	readonly min: number;
	readonly max: number;
};

export function isBirthyearCohortNew(value: unknown): value is BirthyearCohortNew {
	return isRecord(value) &&
		checkProp(value, '@type', createIsStringTypeGuard('birthyear')) &&
		checkProp(value, 'name', isString) &&
		checkProp(value, 'min', isNumber) &&
		checkProp(value, 'max', isNumber);
}

export function BirthyearCohortNewFromJSON($value: Record<string, unknown>): BirthyearCohortNew {
	const name = propValue('name', $value, isString);
	const min = propValue('min', $value, isNumber);
	const max = propValue('max', $value, isNumber);
	return {
		'@type': 'birthyear',
		name,
		min,
		max,
	};
}

export function BirthyearCohortNewToJSON($value: BirthyearCohortNew): Record<string, unknown> {
	const name = $value.name;
	const min = $value.min;
	const max = $value.max;

	return {
		'@type': 'birthyear',
		name,
		min,
		max,
	};
}

