// Generated by RSD - Do not modify
import { checkOptProp, checkProp, isNumber, isRecord, isString, propValue } from '../_type-utils.ts';

export type SportEvent = {
	readonly key: string;
	readonly version: number;
	readonly name: string;
	readonly date: string;
};

export function isSportEvent(value: unknown): value is SportEvent {
	return isRecord(value) &&
		checkProp(value, 'key', isString) &&
		checkProp(value, 'version', isNumber) &&
		checkProp(value, 'name', isString) &&
		checkProp(value, 'date', isString);
}

export function SportEventFromJSON($value: Record<string, unknown>): SportEvent {
	const key = propValue('key', $value, isString);
	const version = propValue('version', $value, isNumber);
	const name = propValue('name', $value, isString);
	const date = propValue('date', $value, isString);
	return {
		key,
		version,
		name,
		date,
	};
}

export function SportEventToJSON($value: SportEvent): Record<string, unknown> {
	const key = $value.key;
	const version = $value.version;
	const name = $value.name;
	const date = $value.date;

	return {
		key,
		version,
		name,
		date,
	};
}

export type SportEventPatch = {
	readonly key: string;
	readonly version: number;
	readonly name?: string;
	readonly date?: string;
};

export function isSportEventPatch(value: unknown): value is SportEventPatch {
	return isRecord(value) &&
		checkProp(value, 'key', isString) &&
		checkProp(value, 'version', isNumber) &&
		checkOptProp(value, 'name', isString) &&
		checkOptProp(value, 'date', isString);
}

export function SportEventPatchFromJSON($value: Record<string, unknown>): SportEventPatch {
	const key = propValue('key', $value, isString);
	const version = propValue('version', $value, isNumber);
	const name = propValue('name', $value, isString, 'optional');
	const date = propValue('date', $value, isString, 'optional');
	return {
		key,
		version,
		name,
		date,
	};
}

export function SportEventPatchToJSON($value: SportEventPatch): Record<string, unknown> {
	const key = $value.key;
	const version = $value.version;
	const name = $value.name;
	const date = $value.date;

	return {
		key,
		version,
		name,
		date,
	};
}

