// Generated by RSD - Do not modify
import type { Result, VoidType } from './_result-utils.ts';
import type { SportEvent, SportEventPatch } from './model/SportEvent.ts';
import type { InvalidDataError, NativeRSDError, NotFoundError, StaleDataError, StatusRSDError } from './Errors.ts';
import type { SportEventNew } from './model/SportEventNew.ts';
import type { UpdateResult } from './model/UpdateResult.ts';

export interface SportEventService {
	get(key: string): Promise<Result<SportEvent, NotFoundError | StatusRSDError | NativeRSDError>>;
	list(): Promise<Result<SportEvent[], StatusRSDError | NativeRSDError>>;
	create(event: SportEventNew): Promise<Result<string, InvalidDataError | StatusRSDError | NativeRSDError>>;
	update(key: string, event: SportEventPatch): Promise<Result<UpdateResult, NotFoundError | InvalidDataError | StaleDataError | StatusRSDError | NativeRSDError>>;
	delete(key: string, version?: number): Promise<Result<VoidType, NotFoundError | StaleDataError | StatusRSDError | NativeRSDError>>;
}
