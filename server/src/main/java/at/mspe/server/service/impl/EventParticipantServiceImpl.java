// Generated by RSD - Do not modify
package at.mspe.server.service.impl;

import java.util.List;

import jakarta.enterprise.context.ApplicationScoped;

import at.mspe.server.service.BuilderFactory;
import at.mspe.server.service.EventParticipantService;
import at.mspe.server.service.InvalidDataException;
import at.mspe.server.service.model.Participant;
import at.mspe.server.service.model.ParticipantNew;
import at.mspe.server.service.model.UpdateResult;
import at.mspe.server.service.NotFoundException;
import at.mspe.server.service.StaleDataException;

@ApplicationScoped
public class EventParticipantServiceImpl implements EventParticipantService {
	private final GetHandler getHandler;
	private final ListHandler listHandler;
	private final CreateHandler createHandler;
	private final UpdateHandler updateHandler;
	private final DeleteHandler deleteHandler;

	public EventParticipantServiceImpl(GetHandler getHandler, ListHandler listHandler, CreateHandler createHandler, UpdateHandler updateHandler, DeleteHandler deleteHandler) {
		this.getHandler = getHandler;
		this.listHandler = listHandler;
		this.createHandler = createHandler;
		this.updateHandler = updateHandler;
		this.deleteHandler = deleteHandler;
	}

	@Override
	public Participant.Data get(BuilderFactory _factory, String eventKey, String key)
			throws NotFoundException {
		return getHandler.get(_factory, eventKey, key);
	}

	@Override
	public List<Participant.Data> list(BuilderFactory _factory, String eventKey)
			throws NotFoundException {
		return listHandler.list(_factory, eventKey);
	}

	@Override
	public String create(BuilderFactory _factory, String eventKey, ParticipantNew.Data participant)
			throws NotFoundException,
			InvalidDataException {
		return createHandler.create(_factory, eventKey, participant);
	}

	@Override
	public UpdateResult.Data update(BuilderFactory _factory, String eventKey, String key, Participant.Patch participant)
			throws NotFoundException,
			InvalidDataException,
			StaleDataException {
		return updateHandler.update(_factory, eventKey, key, participant);
	}

	@Override
	public void delete(BuilderFactory _factory, String eventKey, String key, Long version)
			throws NotFoundException,
			StaleDataException {
		deleteHandler.delete(_factory, eventKey, key, version);
	}

	public interface GetHandler {
		public Participant.Data get(BuilderFactory _factory, String eventKey, String key)
				throws NotFoundException;
	}

	public interface ListHandler {
		public List<Participant.Data> list(BuilderFactory _factory, String eventKey)
				throws NotFoundException;
	}

	public interface CreateHandler {
		public String create(BuilderFactory _factory, String eventKey, ParticipantNew.Data participant)
				throws NotFoundException,
				InvalidDataException;
	}

	public interface UpdateHandler {
		public UpdateResult.Data update(BuilderFactory _factory, String eventKey, String key, Participant.Patch participant)
				throws NotFoundException,
				InvalidDataException,
				StaleDataException;
	}

	public interface DeleteHandler {
		public void delete(BuilderFactory _factory, String eventKey, String key, Long version)
				throws NotFoundException,
				StaleDataException;
	}

}
