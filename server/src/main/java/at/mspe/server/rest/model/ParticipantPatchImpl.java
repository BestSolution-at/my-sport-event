// Generated by RSD - Do not modify
package at.mspe.server.rest.model;

import java.time.LocalDate;
import java.util.Optional;

import jakarta.json.Json;
import jakarta.json.JsonObject;
import jakarta.json.JsonObjectBuilder;

import at.mspe.server.service.model.Participant;

public class ParticipantPatchImpl extends _BaseDataImpl implements Participant.Patch {
	ParticipantPatchImpl(JsonObject data) {
		super(data);
	}

	public String key() {
		return _JsonUtils.mapString(data, "key");
	}

	public long version() {
		return _JsonUtils.mapLong(data, "version");
	}

	public Optional<String> firstname() {
		return _JsonUtils.mapOptString(data, "firstname");
	}

	public Optional<String> lastname() {
		return _JsonUtils.mapOptString(data, "lastname");
	}

	public Optional<String> team() {
		return _JsonUtils.mapOptString(data, "team");
	}

	public Optional<LocalDate> birthday() {
		return _JsonUtils.mapOptLocalDate(data, "birthday");
	}

	public static class PatchBuilderImpl implements Participant.PatchBuilder {
		private JsonObjectBuilder $builder = Json.createObjectBuilder();

		public Participant.PatchBuilder key(String key) {
			$builder.add("key", key);
			return this;
		}

		public Participant.PatchBuilder version(long version) {
			$builder.add("version", version);
			return this;
		}

		@Override
		public Participant.PatchBuilder firstname(String firstname) {
			$builder.add("firstname", firstname);
			return this;
		}

		@Override
		public Participant.PatchBuilder lastname(String lastname) {
			$builder.add("lastname", lastname);
			return this;
		}

		@Override
		public Participant.PatchBuilder team(String team) {
			$builder.add("team", team);
			return this;
		}

		@Override
		public Participant.PatchBuilder birthday(LocalDate birthday) {
			$builder.add("birthday", birthday.toString());
			return this;
		}

		@Override
		public Participant.Patch build() {
			return new ParticipantPatchImpl($builder.build());
		}
	}

	public static Participant.Patch of(JsonObject obj) {
		return new ParticipantPatchImpl(obj);
	}

	public static PatchBuilderImpl builder() {
		return new PatchBuilderImpl();
	}
}
