// Generated by RSD - Do not modify
package at.mspe.server.rest.model;

import java.time.LocalDate;

import jakarta.json.Json;
import jakarta.json.JsonObject;
import jakarta.json.JsonObjectBuilder;

import at.mspe.server.service.model.Gender;
import at.mspe.server.service.model.ParticipantNew;

public class ParticipantNewDataImpl extends _BaseDataImpl implements ParticipantNew.Data {
	ParticipantNewDataImpl(JsonObject data) {
		super(data);
	}

	public String firstname() {
		return _JsonUtils.mapString(data, "firstname");
	}

	public String lastname() {
		return _JsonUtils.mapString(data, "lastname");
	}

	public String team() {
		return _JsonUtils.mapString(data, "team");
	}

	public LocalDate birthday() {
		return _JsonUtils.mapLocalDate(data, "birthday");
	}

	public Gender gender() {
		return _JsonUtils.mapLiteral(data, "gender", Gender::valueOf);
	}

	public String association() {
		return _JsonUtils.mapString(data, "association", null);
	}

	public static ParticipantNew.Data of(JsonObject obj) {
		return new ParticipantNewDataImpl(obj);
	}

	public String toString() {
		return getClass().getSimpleName();
	}

	public static class DataBuilderImpl implements ParticipantNew.DataBuilder {
		private JsonObjectBuilder $builder = Json.createObjectBuilder();

		public ParticipantNew.DataBuilder firstname(String firstname) {
			if (firstname == null) {
				return this;
			}
			$builder.add("firstname", firstname);
			return this;
		}

		public ParticipantNew.DataBuilder lastname(String lastname) {
			if (lastname == null) {
				return this;
			}
			$builder.add("lastname", lastname);
			return this;
		}

		public ParticipantNew.DataBuilder team(String team) {
			if (team == null) {
				return this;
			}
			$builder.add("team", team);
			return this;
		}

		public ParticipantNew.DataBuilder birthday(LocalDate birthday) {
			if (birthday == null) {
				return this;
			}
			$builder.add("birthday", birthday.toString());
			return this;
		}

		public ParticipantNew.DataBuilder gender(Gender gender) {
			if (gender == null) {
				return this;
			}
			$builder.add("gender", gender.toString());
			return this;
		}

		public ParticipantNew.DataBuilder association(String association) {
			if (association == null) {
				return this;
			}
			$builder.add("association", association);
			return this;
		}

		public ParticipantNew.Data build() {
			return new ParticipantNewDataImpl($builder.build());
		}
	}

	public static ParticipantNew.DataBuilder builder() {
		return new DataBuilderImpl();
	}
}
