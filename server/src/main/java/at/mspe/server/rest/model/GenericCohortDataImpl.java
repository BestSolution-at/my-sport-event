// Generated by RSD - Do not modify
package at.mspe.server.rest.model;

import jakarta.json.Json;
import jakarta.json.JsonObject;
import jakarta.json.JsonObjectBuilder;

import at.mspe.server.service.model.GenericCohort;

public class GenericCohortDataImpl extends _BaseDataImpl implements GenericCohort.Data {
	GenericCohortDataImpl(JsonObject data) {
		super(data);
	}

	public String key() {
		return _JsonUtils.mapString(data, "key");
	}

	public long version() {
		return _JsonUtils.mapLong(data, "version");
	}

	public String name() {
		return _JsonUtils.mapString(data, "name");
	}

	public static GenericCohort.Data of(JsonObject obj) {
		return new GenericCohortDataImpl(obj);
	}

	public String toString() {
		return "%s[%s=%s@%s=%s]".formatted(getClass().getSimpleName(), "key", key(), "version", version());
	}

	public static class DataBuilderImpl implements GenericCohort.DataBuilder {
		private JsonObjectBuilder $builder = Json.createObjectBuilder();

		public DataBuilderImpl() {
			$builder.add("@type", "generic");
		}

		public GenericCohort.DataBuilder key(String key) {
			$builder.add("key", key);
			return this;
		}

		public GenericCohort.DataBuilder version(long version) {
			$builder.add("version", version);
			return this;
		}

		public GenericCohort.DataBuilder name(String name) {
			if (name == null) {
				return this;
			}
			$builder.add("name", name);
			return this;
		}

		public GenericCohort.Data build() {
			return new GenericCohortDataImpl($builder.build());
		}
	}

	public static GenericCohort.DataBuilder builder() {
		return new DataBuilderImpl();
	}
}
