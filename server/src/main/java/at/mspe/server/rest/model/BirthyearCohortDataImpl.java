// Generated by RSD - Do not modify
package at.mspe.server.rest.model;

import jakarta.json.Json;
import jakarta.json.JsonObject;
import jakarta.json.JsonObjectBuilder;

import at.mspe.server.service.model.BirthyearCohort;

public class BirthyearCohortDataImpl extends _BaseDataImpl implements BirthyearCohort.Data {
	BirthyearCohortDataImpl(JsonObject data) {
		super(data);
	}

	public String key() {
		return _JsonUtils.mapString(data, "key");
	}

	public String name() {
		return _JsonUtils.mapString(data, "name");
	}

	public int min() {
		return _JsonUtils.mapInt(data, "min");
	}

	public int max() {
		return _JsonUtils.mapInt(data, "max", 0);
	}

	public static BirthyearCohort.Data of(JsonObject obj) {
		return new BirthyearCohortDataImpl(obj);
	}

	public String toString() {
		return "%s[%s=%s]".formatted(getClass().getSimpleName(), "key", key());
	}

	public static class DataBuilderImpl implements BirthyearCohort.DataBuilder {
		private JsonObjectBuilder $builder = Json.createObjectBuilder();

		public DataBuilderImpl() {
			$builder.add("@type", "birthyear");
		}

		public BirthyearCohort.DataBuilder key(String key) {
			$builder.add("key", key);
			return this;
		}

		public BirthyearCohort.DataBuilder name(String name) {
			if (name == null) {
				return this;
			}
			$builder.add("name", name);
			return this;
		}

		public BirthyearCohort.DataBuilder min(int min) {
			$builder.add("min", min);
			return this;
		}

		public BirthyearCohort.DataBuilder max(int max) {
			$builder.add("max", max);
			return this;
		}

		public BirthyearCohort.Data build() {
			return new BirthyearCohortDataImpl($builder.build());
		}
	}

	public static BirthyearCohort.DataBuilder builder() {
		return new DataBuilderImpl();
	}
}
