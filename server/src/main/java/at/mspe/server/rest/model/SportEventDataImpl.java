// Generated by RSD - Do not modify
package at.mspe.server.rest.model;

import java.time.ZonedDateTime;

import jakarta.json.Json;
import jakarta.json.JsonObject;
import jakarta.json.JsonObjectBuilder;

import at.mspe.server.service.model.SportEvent;

public class SportEventDataImpl extends _BaseDataImpl implements SportEvent.Data {
	SportEventDataImpl(JsonObject data) {
		super(data);
	}

	public String key() {
		return _JsonUtils.mapString(data, "key");
	}

	public long version() {
		return _JsonUtils.mapLong(data, "version");
	}

	public String name() {
		return _JsonUtils.mapString(data, "name");
	}

	public ZonedDateTime date() {
		return _JsonUtils.mapZonedDateTime(data, "date");
	}

	public static SportEvent.Data of(JsonObject obj) {
		return new SportEventDataImpl(obj);
	}

	public String toString() {
		return "%s[%s=%s@%s=%s]".formatted(getClass().getSimpleName(), "key", key(), "version", version());
	}

	public static class DataBuilderImpl implements SportEvent.DataBuilder {
		private JsonObjectBuilder $builder = Json.createObjectBuilder();

		public SportEvent.DataBuilder key(String key) {
			$builder.add("key", key);
			return this;
		}

		public SportEvent.DataBuilder version(long version) {
			$builder.add("version", version);
			return this;
		}

		public SportEvent.DataBuilder name(String name) {
			if (name == null) {
				return this;
			}
			$builder.add("name", name);
			return this;
		}

		public SportEvent.DataBuilder date(ZonedDateTime date) {
			if (date == null) {
				return this;
			}
			$builder.add("date", date.toString());
			return this;
		}

		public SportEvent.Data build() {
			return new SportEventDataImpl($builder.build());
		}
	}

	public static SportEvent.DataBuilder builder() {
		return new DataBuilderImpl();
	}
}
